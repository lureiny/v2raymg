// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.12.4
// source: rpc_server.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuilderType int32

const (
	BuilderType_UnknowBuilderType        BuilderType = 0
	BuilderType_VLESSSettingBuilderType  BuilderType = 10
	BuilderType_VMESSSettingBuilderType  BuilderType = 11
	BuilderType_TrojanSettingBuilderType BuilderType = 12
	BuilderType_TCPBuilderType           BuilderType = 20
	BuilderType_WSBuilderType            BuilderType = 21
	BuilderType_QuicBuilderType          BuilderType = 22
	BuilderType_MkcpBuilderType          BuilderType = 23
	BuilderType_GrpcBuilderType          BuilderType = 24
	BuilderType_HttpBuilderType          BuilderType = 25
)

// Enum value maps for BuilderType.
var (
	BuilderType_name = map[int32]string{
		0:  "UnknowBuilderType",
		10: "VLESSSettingBuilderType",
		11: "VMESSSettingBuilderType",
		12: "TrojanSettingBuilderType",
		20: "TCPBuilderType",
		21: "WSBuilderType",
		22: "QuicBuilderType",
		23: "MkcpBuilderType",
		24: "GrpcBuilderType",
		25: "HttpBuilderType",
	}
	BuilderType_value = map[string]int32{
		"UnknowBuilderType":        0,
		"VLESSSettingBuilderType":  10,
		"VMESSSettingBuilderType":  11,
		"TrojanSettingBuilderType": 12,
		"TCPBuilderType":           20,
		"WSBuilderType":            21,
		"QuicBuilderType":          22,
		"MkcpBuilderType":          23,
		"GrpcBuilderType":          24,
		"HttpBuilderType":          25,
	}
)

func (x BuilderType) Enum() *BuilderType {
	p := new(BuilderType)
	*p = x
	return p
}

func (x BuilderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuilderType) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_server_proto_enumTypes[0].Descriptor()
}

func (BuilderType) Type() protoreflect.EnumType {
	return &file_rpc_server_proto_enumTypes[0]
}

func (x BuilderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuilderType.Descriptor instead.
func (BuilderType) EnumDescriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Passwd     string   `protobuf:"bytes,2,opt,name=passwd,proto3" json:"passwd,omitempty"`
	ExpireTime int64    `protobuf:"varint,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Tags       []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Downlink   int64    `protobuf:"varint,5,opt,name=downlink,proto3" json:"downlink,omitempty"`
	Uplink     int64    `protobuf:"varint,6,opt,name=uplink,proto3" json:"uplink,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *User) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *User) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *User) GetDownlink() int64 {
	if x != nil {
		return x.Downlink
	}
	return 0
}

func (x *User) GetUplink() int64 {
	if x != nil {
		return x.Uplink
	}
	return 0
}

type NodeAuthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Node  *Node  `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *NodeAuthInfo) Reset() {
	*x = NodeAuthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAuthInfo) ProtoMessage() {}

func (x *NodeAuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAuthInfo.ProtoReflect.Descriptor instead.
func (*NodeAuthInfo) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{1}
}

func (x *NodeAuthInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *NodeAuthInfo) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type GetUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
}

func (x *GetUsersReq) Reset() {
	*x = GetUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersReq) ProtoMessage() {}

func (x *GetUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersReq.ProtoReflect.Descriptor instead.
func (*GetUsersReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{2}
}

func (x *GetUsersReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

type GetUsersRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg   string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Users []*User `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetUsersRsp) Reset() {
	*x = GetUsersRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRsp) ProtoMessage() {}

func (x *GetUsersRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRsp.ProtoReflect.Descriptor instead.
func (*GetUsersRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{3}
}

func (x *GetUsersRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUsersRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetUsersRsp) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserOpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	Users        []*User       `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserOpReq) Reset() {
	*x = UserOpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOpReq) ProtoMessage() {}

func (x *UserOpReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOpReq.ProtoReflect.Descriptor instead.
func (*UserOpReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{4}
}

func (x *UserOpReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *UserOpReq) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserOpRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UserOpRsp) Reset() {
	*x = UserOpRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOpRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOpRsp) ProtoMessage() {}

func (x *UserOpRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOpRsp.ProtoReflect.Descriptor instead.
func (*UserOpRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{5}
}

func (x *UserOpRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserOpRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetSubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo     *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	User             *User         `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	ExcludeProtocols []string      `protobuf:"bytes,3,rep,name=exclude_protocols,json=excludeProtocols,proto3" json:"exclude_protocols,omitempty"`
	UseSni           bool          `protobuf:"varint,4,opt,name=use_sni,json=useSni,proto3" json:"use_sni,omitempty"`
}

func (x *GetSubReq) Reset() {
	*x = GetSubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubReq) ProtoMessage() {}

func (x *GetSubReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubReq.ProtoReflect.Descriptor instead.
func (*GetSubReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{6}
}

func (x *GetSubReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *GetSubReq) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetSubReq) GetExcludeProtocols() []string {
	if x != nil {
		return x.ExcludeProtocols
	}
	return nil
}

func (x *GetSubReq) GetUseSni() bool {
	if x != nil {
		return x.UseSni
	}
	return false
}

type GetSubRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Uris []string `protobuf:"bytes,3,rep,name=uris,proto3" json:"uris,omitempty"`
}

func (x *GetSubRsp) Reset() {
	*x = GetSubRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubRsp) ProtoMessage() {}

func (x *GetSubRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubRsp.ProtoReflect.Descriptor instead.
func (*GetSubRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{7}
}

func (x *GetSubRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSubRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetSubRsp) GetUris() []string {
	if x != nil {
		return x.Uris
	}
	return nil
}

type HeartBeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
}

func (x *HeartBeatReq) Reset() {
	*x = HeartBeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatReq) ProtoMessage() {}

func (x *HeartBeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatReq.ProtoReflect.Descriptor instead.
func (*HeartBeatReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{8}
}

func (x *HeartBeatReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host        string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port        int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	ClusterName string `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{9}
}

func (x *Node) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Node) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Node) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HeartBeatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg      string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	NodesMap map[string]*Node `protobuf:"bytes,3,rep,name=nodesMap,proto3" json:"nodesMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HeartBeatRsp) Reset() {
	*x = HeartBeatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatRsp) ProtoMessage() {}

func (x *HeartBeatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatRsp.ProtoReflect.Descriptor instead.
func (*HeartBeatRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{10}
}

func (x *HeartBeatRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HeartBeatRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *HeartBeatRsp) GetNodesMap() map[string]*Node {
	if x != nil {
		return x.NodesMap
	}
	return nil
}

type Nodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes map[string]*Nodes `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Nodes) Reset() {
	*x = Nodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nodes) ProtoMessage() {}

func (x *Nodes) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nodes.ProtoReflect.Descriptor instead.
func (*Nodes) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{11}
}

func (x *Nodes) GetNodes() map[string]*Nodes {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type RegisterNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
}

func (x *RegisterNodeReq) Reset() {
	*x = RegisterNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeReq) ProtoMessage() {}

func (x *RegisterNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeReq.ProtoReflect.Descriptor instead.
func (*RegisterNodeReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterNodeReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

type RegisterNodeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // end node 节点间注册返回token(string), 注册到center node返回[]Node
}

func (x *RegisterNodeRsp) Reset() {
	*x = RegisterNodeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNodeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRsp) ProtoMessage() {}

func (x *RegisterNodeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRsp.ProtoReflect.Descriptor instead.
func (*RegisterNodeRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{13}
}

func (x *RegisterNodeRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RegisterNodeRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RegisterNodeRsp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetBandwidthStatsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
}

func (x *GetBandwidthStatsReq) Reset() {
	*x = GetBandwidthStatsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBandwidthStatsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBandwidthStatsReq) ProtoMessage() {}

func (x *GetBandwidthStatsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBandwidthStatsReq.ProtoReflect.Descriptor instead.
func (*GetBandwidthStatsReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{14}
}

func (x *GetBandwidthStatsReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Downlink int64  `protobuf:"varint,3,opt,name=downlink,proto3" json:"downlink,omitempty"`
	Uplink   int64  `protobuf:"varint,4,opt,name=uplink,proto3" json:"uplink,omitempty"`
	Proxy    string `protobuf:"bytes,5,opt,name=proxy,proto3" json:"proxy,omitempty"`   // proxy name
	Source   string `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"` // int64 timestamp = 7; // 记录统计的时间
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{15}
}

func (x *Stats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stats) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Stats) GetDownlink() int64 {
	if x != nil {
		return x.Downlink
	}
	return 0
}

func (x *Stats) GetUplink() int64 {
	if x != nil {
		return x.Uplink
	}
	return 0
}

func (x *Stats) GetProxy() string {
	if x != nil {
		return x.Proxy
	}
	return ""
}

func (x *Stats) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type GetBandwidthStatsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg   string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Stats []*Stats `protobuf:"bytes,3,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *GetBandwidthStatsRsp) Reset() {
	*x = GetBandwidthStatsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBandwidthStatsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBandwidthStatsRsp) ProtoMessage() {}

func (x *GetBandwidthStatsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBandwidthStatsRsp.ProtoReflect.Descriptor instead.
func (*GetBandwidthStatsRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{16}
}

func (x *GetBandwidthStatsRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetBandwidthStatsRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBandwidthStatsRsp) GetStats() []*Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type InboundOpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	InboundInfo  string        `protobuf:"bytes,2,opt,name=inboundInfo,proto3" json:"inboundInfo,omitempty"` // inbound info 添加inbound时为inbound对应的base64, 删除时为tag
}

func (x *InboundOpReq) Reset() {
	*x = InboundOpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundOpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundOpReq) ProtoMessage() {}

func (x *InboundOpReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundOpReq.ProtoReflect.Descriptor instead.
func (*InboundOpReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{17}
}

func (x *InboundOpReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *InboundOpReq) GetInboundInfo() string {
	if x != nil {
		return x.InboundInfo
	}
	return ""
}

type InboundOpRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InboundOpRsp) Reset() {
	*x = InboundOpRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InboundOpRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InboundOpRsp) ProtoMessage() {}

func (x *InboundOpRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InboundOpRsp.ProtoReflect.Descriptor instead.
func (*InboundOpRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{18}
}

func (x *InboundOpRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InboundOpRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TransferInboundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	Tag          string        `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	NewPort      int32         `protobuf:"varint,3,opt,name=new_port,json=newPort,proto3" json:"new_port,omitempty"`
}

func (x *TransferInboundReq) Reset() {
	*x = TransferInboundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferInboundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInboundReq) ProtoMessage() {}

func (x *TransferInboundReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInboundReq.ProtoReflect.Descriptor instead.
func (*TransferInboundReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{19}
}

func (x *TransferInboundReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *TransferInboundReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *TransferInboundReq) GetNewPort() int32 {
	if x != nil {
		return x.NewPort
	}
	return 0
}

type CopyInboundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	SrcTag       string        `protobuf:"bytes,2,opt,name=src_tag,json=srcTag,proto3" json:"src_tag,omitempty"`
	NewTag       string        `protobuf:"bytes,3,opt,name=new_tag,json=newTag,proto3" json:"new_tag,omitempty"`
	NewPort      int32         `protobuf:"varint,4,opt,name=new_port,json=newPort,proto3" json:"new_port,omitempty"`
	IsCopyUser   bool          `protobuf:"varint,5,opt,name=is_copy_user,json=isCopyUser,proto3" json:"is_copy_user,omitempty"`
	NewProtocol  string        `protobuf:"bytes,6,opt,name=new_protocol,json=newProtocol,proto3" json:"new_protocol,omitempty"`
}

func (x *CopyInboundReq) Reset() {
	*x = CopyInboundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyInboundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyInboundReq) ProtoMessage() {}

func (x *CopyInboundReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyInboundReq.ProtoReflect.Descriptor instead.
func (*CopyInboundReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{20}
}

func (x *CopyInboundReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *CopyInboundReq) GetSrcTag() string {
	if x != nil {
		return x.SrcTag
	}
	return ""
}

func (x *CopyInboundReq) GetNewTag() string {
	if x != nil {
		return x.NewTag
	}
	return ""
}

func (x *CopyInboundReq) GetNewPort() int32 {
	if x != nil {
		return x.NewPort
	}
	return 0
}

func (x *CopyInboundReq) GetIsCopyUser() bool {
	if x != nil {
		return x.IsCopyUser
	}
	return false
}

func (x *CopyInboundReq) GetNewProtocol() string {
	if x != nil {
		return x.NewProtocol
	}
	return ""
}

type CopyUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	SrcTag       string        `protobuf:"bytes,2,opt,name=src_tag,json=srcTag,proto3" json:"src_tag,omitempty"`
	DstTag       string        `protobuf:"bytes,3,opt,name=dst_tag,json=dstTag,proto3" json:"dst_tag,omitempty"`
}

func (x *CopyUserReq) Reset() {
	*x = CopyUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyUserReq) ProtoMessage() {}

func (x *CopyUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyUserReq.ProtoReflect.Descriptor instead.
func (*CopyUserReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{21}
}

func (x *CopyUserReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *CopyUserReq) GetSrcTag() string {
	if x != nil {
		return x.SrcTag
	}
	return ""
}

func (x *CopyUserReq) GetDstTag() string {
	if x != nil {
		return x.DstTag
	}
	return ""
}

type GetInboundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	Tag          string        `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *GetInboundReq) Reset() {
	*x = GetInboundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundReq) ProtoMessage() {}

func (x *GetInboundReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundReq.ProtoReflect.Descriptor instead.
func (*GetInboundReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{22}
}

func (x *GetInboundReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *GetInboundReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type GetInboundRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetInboundRsp) Reset() {
	*x = GetInboundRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInboundRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInboundRsp) ProtoMessage() {}

func (x *GetInboundRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInboundRsp.ProtoReflect.Descriptor instead.
func (*GetInboundRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{23}
}

func (x *GetInboundRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetInboundRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetInboundRsp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
}

func (x *GetTagReq) Reset() {
	*x = GetTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagReq) ProtoMessage() {}

func (x *GetTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagReq.ProtoReflect.Descriptor instead.
func (*GetTagReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{24}
}

func (x *GetTagReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

type GetTagRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Tags []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetTagRsp) Reset() {
	*x = GetTagRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagRsp) ProtoMessage() {}

func (x *GetTagRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagRsp.ProtoReflect.Descriptor instead.
func (*GetTagRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{25}
}

func (x *GetTagRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetTagRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetTagRsp) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateProxyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	Tag          string        `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *UpdateProxyReq) Reset() {
	*x = UpdateProxyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProxyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyReq) ProtoMessage() {}

func (x *UpdateProxyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyReq.ProtoReflect.Descriptor instead.
func (*UpdateProxyReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateProxyReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *UpdateProxyReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type UpdateProxyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateProxyRsp) Reset() {
	*x = UpdateProxyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProxyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProxyRsp) ProtoMessage() {}

func (x *UpdateProxyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProxyRsp.ProtoReflect.Descriptor instead.
func (*UpdateProxyRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateProxyRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateProxyRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AdaptiveOpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	Ports        []string      `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"` // 可以为port range port1-port2
	Tags         []string      `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *AdaptiveOpReq) Reset() {
	*x = AdaptiveOpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdaptiveOpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdaptiveOpReq) ProtoMessage() {}

func (x *AdaptiveOpReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdaptiveOpReq.ProtoReflect.Descriptor instead.
func (*AdaptiveOpReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{28}
}

func (x *AdaptiveOpReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *AdaptiveOpReq) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *AdaptiveOpReq) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AdaptiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	Tags         []string      `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *AdaptiveReq) Reset() {
	*x = AdaptiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdaptiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdaptiveReq) ProtoMessage() {}

func (x *AdaptiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdaptiveReq.ProtoReflect.Descriptor instead.
func (*AdaptiveReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{29}
}

func (x *AdaptiveReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *AdaptiveReq) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AdaptiveRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AdaptiveRsp) Reset() {
	*x = AdaptiveRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdaptiveRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdaptiveRsp) ProtoMessage() {}

func (x *AdaptiveRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdaptiveRsp.ProtoReflect.Descriptor instead.
func (*AdaptiveRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{30}
}

func (x *AdaptiveRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AdaptiveRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SetGatewayModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo       *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	EnableGatewayModel bool          `protobuf:"varint,2,opt,name=enableGatewayModel,proto3" json:"enableGatewayModel,omitempty"`
}

func (x *SetGatewayModelReq) Reset() {
	*x = SetGatewayModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGatewayModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGatewayModelReq) ProtoMessage() {}

func (x *SetGatewayModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGatewayModelReq.ProtoReflect.Descriptor instead.
func (*SetGatewayModelReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{31}
}

func (x *SetGatewayModelReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *SetGatewayModelReq) GetEnableGatewayModel() bool {
	if x != nil {
		return x.EnableGatewayModel
	}
	return false
}

type SetGatewayModelRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SetGatewayModelRsp) Reset() {
	*x = SetGatewayModelRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGatewayModelRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGatewayModelRsp) ProtoMessage() {}

func (x *SetGatewayModelRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGatewayModelRsp.ProtoReflect.Descriptor instead.
func (*SetGatewayModelRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{32}
}

func (x *SetGatewayModelRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SetGatewayModelRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ObtainNewCertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	Domain       string        `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *ObtainNewCertReq) Reset() {
	*x = ObtainNewCertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObtainNewCertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObtainNewCertReq) ProtoMessage() {}

func (x *ObtainNewCertReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObtainNewCertReq.ProtoReflect.Descriptor instead.
func (*ObtainNewCertReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{33}
}

func (x *ObtainNewCertReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *ObtainNewCertReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type ObtainNewCertRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ObtainNewCertRsp) Reset() {
	*x = ObtainNewCertRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObtainNewCertRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObtainNewCertRsp) ProtoMessage() {}

func (x *ObtainNewCertRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObtainNewCertRsp.ProtoReflect.Descriptor instead.
func (*ObtainNewCertRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{34}
}

func (x *ObtainNewCertRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ObtainNewCertRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type FastAddInboundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo       *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	InboundBuilderType BuilderType   `protobuf:"varint,2,opt,name=inboundBuilderType,proto3,enum=proto.BuilderType" json:"inboundBuilderType,omitempty"`
	StreamBuilderType  BuilderType   `protobuf:"varint,3,opt,name=streamBuilderType,proto3,enum=proto.BuilderType" json:"streamBuilderType,omitempty"`
	Port               int32         `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Domain             string        `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	IsXtls             bool          `protobuf:"varint,6,opt,name=isXtls,proto3" json:"isXtls,omitempty"`
	Tag                string        `protobuf:"bytes,7,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *FastAddInboundReq) Reset() {
	*x = FastAddInboundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FastAddInboundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FastAddInboundReq) ProtoMessage() {}

func (x *FastAddInboundReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FastAddInboundReq.ProtoReflect.Descriptor instead.
func (*FastAddInboundReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{35}
}

func (x *FastAddInboundReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *FastAddInboundReq) GetInboundBuilderType() BuilderType {
	if x != nil {
		return x.InboundBuilderType
	}
	return BuilderType_UnknowBuilderType
}

func (x *FastAddInboundReq) GetStreamBuilderType() BuilderType {
	if x != nil {
		return x.StreamBuilderType
	}
	return BuilderType_UnknowBuilderType
}

func (x *FastAddInboundReq) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *FastAddInboundReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *FastAddInboundReq) GetIsXtls() bool {
	if x != nil {
		return x.IsXtls
	}
	return false
}

func (x *FastAddInboundReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type FastAddInboundRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *FastAddInboundRsp) Reset() {
	*x = FastAddInboundRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FastAddInboundRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FastAddInboundRsp) ProtoMessage() {}

func (x *FastAddInboundRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FastAddInboundRsp.ProtoReflect.Descriptor instead.
func (*FastAddInboundRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{36}
}

func (x *FastAddInboundRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FastAddInboundRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TransferCertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	Domain       string        `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	CertData     []byte        `protobuf:"bytes,3,opt,name=cert_data,json=certData,proto3" json:"cert_data,omitempty"`
	KeyDatas     []byte        `protobuf:"bytes,4,opt,name=key_datas,json=keyDatas,proto3" json:"key_datas,omitempty"`
}

func (x *TransferCertReq) Reset() {
	*x = TransferCertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCertReq) ProtoMessage() {}

func (x *TransferCertReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCertReq.ProtoReflect.Descriptor instead.
func (*TransferCertReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{37}
}

func (x *TransferCertReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *TransferCertReq) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *TransferCertReq) GetCertData() []byte {
	if x != nil {
		return x.CertData
	}
	return nil
}

func (x *TransferCertReq) GetKeyDatas() []byte {
	if x != nil {
		return x.KeyDatas
	}
	return nil
}

type TransferCertRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *TransferCertRsp) Reset() {
	*x = TransferCertRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCertRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCertRsp) ProtoMessage() {}

func (x *TransferCertRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCertRsp.ProtoReflect.Descriptor instead.
func (*TransferCertRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{38}
}

func (x *TransferCertRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TransferCertRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Cert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain     string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	KeyFile    string `protobuf:"bytes,2,opt,name=key_file,json=keyFile,proto3" json:"key_file,omitempty"`
	CertFile   string `protobuf:"bytes,3,opt,name=cert_file,json=certFile,proto3" json:"cert_file,omitempty"`
	ExpireTime string `protobuf:"bytes,4,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
}

func (x *Cert) Reset() {
	*x = Cert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cert) ProtoMessage() {}

func (x *Cert) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cert.ProtoReflect.Descriptor instead.
func (*Cert) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{39}
}

func (x *Cert) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Cert) GetKeyFile() string {
	if x != nil {
		return x.KeyFile
	}
	return ""
}

func (x *Cert) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *Cert) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

type GetCertsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
}

func (x *GetCertsReq) Reset() {
	*x = GetCertsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertsReq) ProtoMessage() {}

func (x *GetCertsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertsReq.ProtoReflect.Descriptor instead.
func (*GetCertsReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{40}
}

func (x *GetCertsReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

type GetCertsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Certs []*Cert `protobuf:"bytes,2,rep,name=certs,proto3" json:"certs,omitempty"`
}

func (x *GetCertsRsp) Reset() {
	*x = GetCertsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertsRsp) ProtoMessage() {}

func (x *GetCertsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertsRsp.ProtoReflect.Descriptor instead.
func (*GetCertsRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{41}
}

func (x *GetCertsRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCertsRsp) GetCerts() []*Cert {
	if x != nil {
		return x.Certs
	}
	return nil
}

type ClearUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
	Users        []string      `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ClearUsersReq) Reset() {
	*x = ClearUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUsersReq) ProtoMessage() {}

func (x *ClearUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUsersReq.ProtoReflect.Descriptor instead.
func (*ClearUsersReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{42}
}

func (x *ClearUsersReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

func (x *ClearUsersReq) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type ClearUsersRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ClearUsersRsp) Reset() {
	*x = ClearUsersRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearUsersRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearUsersRsp) ProtoMessage() {}

func (x *ClearUsersRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearUsersRsp.ProtoReflect.Descriptor instead.
func (*ClearUsersRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{43}
}

func (x *ClearUsersRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ClearUsersRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PingMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string        `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"` // ip or domain
	Source  string        `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Results []*PingResult `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *PingMetric) Reset() {
	*x = PingMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMetric) ProtoMessage() {}

func (x *PingMetric) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMetric.ProtoReflect.Descriptor instead.
func (*PingMetric) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{44}
}

func (x *PingMetric) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PingMetric) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *PingMetric) GetResults() []*PingResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type PingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Geo         string  `protobuf:"bytes,1,opt,name=geo,proto3" json:"geo,omitempty"` // location
	Isp         string  `protobuf:"bytes,2,opt,name=isp,proto3" json:"isp,omitempty"` // provider
	MaxDelay    float32 `protobuf:"fixed32,10,opt,name=max_delay,json=maxDelay,proto3" json:"max_delay,omitempty"`
	MinDelay    float32 `protobuf:"fixed32,11,opt,name=min_delay,json=minDelay,proto3" json:"min_delay,omitempty"`
	StDevDelay  float32 `protobuf:"fixed32,12,opt,name=st_dev_delay,json=stDevDelay,proto3" json:"st_dev_delay,omitempty"`
	AvgDelay    float32 `protobuf:"fixed32,13,opt,name=avg_delay,json=avgDelay,proto3" json:"avg_delay,omitempty"`
	Loss        float32 `protobuf:"fixed32,14,opt,name=loss,proto3" json:"loss,omitempty"` // 丢包率
	LatestDelay float32 `protobuf:"fixed32,15,opt,name=latest_delay,json=latestDelay,proto3" json:"latest_delay,omitempty"`
}

func (x *PingResult) Reset() {
	*x = PingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResult) ProtoMessage() {}

func (x *PingResult) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResult.ProtoReflect.Descriptor instead.
func (*PingResult) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{45}
}

func (x *PingResult) GetGeo() string {
	if x != nil {
		return x.Geo
	}
	return ""
}

func (x *PingResult) GetIsp() string {
	if x != nil {
		return x.Isp
	}
	return ""
}

func (x *PingResult) GetMaxDelay() float32 {
	if x != nil {
		return x.MaxDelay
	}
	return 0
}

func (x *PingResult) GetMinDelay() float32 {
	if x != nil {
		return x.MinDelay
	}
	return 0
}

func (x *PingResult) GetStDevDelay() float32 {
	if x != nil {
		return x.StDevDelay
	}
	return 0
}

func (x *PingResult) GetAvgDelay() float32 {
	if x != nil {
		return x.AvgDelay
	}
	return 0
}

func (x *PingResult) GetLoss() float32 {
	if x != nil {
		return x.Loss
	}
	return 0
}

func (x *PingResult) GetLatestDelay() float32 {
	if x != nil {
		return x.LatestDelay
	}
	return 0
}

type GetPingMetricReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeAuthInfo *NodeAuthInfo `protobuf:"bytes,1,opt,name=node_auth_info,json=nodeAuthInfo,proto3" json:"node_auth_info,omitempty"`
}

func (x *GetPingMetricReq) Reset() {
	*x = GetPingMetricReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPingMetricReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPingMetricReq) ProtoMessage() {}

func (x *GetPingMetricReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPingMetricReq.ProtoReflect.Descriptor instead.
func (*GetPingMetricReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{46}
}

func (x *GetPingMetricReq) GetNodeAuthInfo() *NodeAuthInfo {
	if x != nil {
		return x.NodeAuthInfo
	}
	return nil
}

type GetPingMetricRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Metric *PingMetric `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`
}

func (x *GetPingMetricRsp) Reset() {
	*x = GetPingMetricRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPingMetricRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPingMetricRsp) ProtoMessage() {}

func (x *GetPingMetricRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPingMetricRsp.ProtoReflect.Descriptor instead.
func (*GetPingMetricRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{47}
}

func (x *GetPingMetricRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPingMetricRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPingMetricRsp) GetMetric() *PingMetric {
	if x != nil {
		return x.Metric
	}
	return nil
}

type GetClutersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
}

func (x *GetClutersReq) Reset() {
	*x = GetClutersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClutersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClutersReq) ProtoMessage() {}

func (x *GetClutersReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClutersReq.ProtoReflect.Descriptor instead.
func (*GetClutersReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{48}
}

func (x *GetClutersReq) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetClutersRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterNames []string `protobuf:"bytes,1,rep,name=cluster_names,json=clusterNames,proto3" json:"cluster_names,omitempty"`
}

func (x *GetClutersRsp) Reset() {
	*x = GetClutersRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClutersRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClutersRsp) ProtoMessage() {}

func (x *GetClutersRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClutersRsp.ProtoReflect.Descriptor instead.
func (*GetClutersRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{49}
}

func (x *GetClutersRsp) GetClusterNames() []string {
	if x != nil {
		return x.ClusterNames
	}
	return nil
}

type GetNodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
}

func (x *GetNodesReq) Reset() {
	*x = GetNodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesReq) ProtoMessage() {}

func (x *GetNodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesReq.ProtoReflect.Descriptor instead.
func (*GetNodesReq) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{50}
}

func (x *GetNodesReq) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetNodesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string           `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	NodesMap    map[string]*Node `protobuf:"bytes,2,rep,name=nodesMap,proto3" json:"nodesMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetNodesRsp) Reset() {
	*x = GetNodesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_server_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesRsp) ProtoMessage() {}

func (x *GetNodesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_server_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesRsp.ProtoReflect.Descriptor instead.
func (*GetNodesRsp) Descriptor() ([]byte, []int) {
	return file_rpc_server_proto_rawDescGZIP(), []int{51}
}

func (x *GetNodesRsp) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *GetNodesRsp) GetNodesMap() map[string]*Node {
	if x != nil {
		return x.NodesMap
	}
	return nil
}

var File_rpc_server_proto protoreflect.FileDescriptor

var file_rpc_server_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x45, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x48,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a,
	0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x22, 0x69, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a,
	0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x31, 0x0a, 0x09, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xad,
	0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x6e, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x53, 0x6e, 0x69, 0x22, 0x45,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x69, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x72, 0x69, 0x73, 0x22, 0x49, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x65, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3d,
	0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x61, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x1a, 0x48, 0x0a,
	0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a,
	0x46, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x60, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x6b, 0x0a, 0x0c, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a, 0x0c, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x4f, 0x70, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7c,
	0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xdd, 0x01, 0x0a,
	0x0e, 0x43, 0x6f, 0x70, 0x79, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f,
	0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72,
	0x63, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x72, 0x63,
	0x54, 0x61, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x65, 0x77, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6e, 0x65, 0x77, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f,
	0x70, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x43, 0x6f, 0x70, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x7a, 0x0a, 0x0b,
	0x43, 0x6f, 0x70, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x72, 0x63, 0x54, 0x61, 0x67, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x73, 0x74, 0x54, 0x61, 0x67, 0x22, 0x5c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x46, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x39,
	0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x67, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x5d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22,
	0x36, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x74, 0x0a, 0x0d, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x69, 0x76, 0x65, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x5c, 0x0a,
	0x0b, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x33, 0x0a, 0x0b, 0x41,
	0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x7f, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x22, 0x3a, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x65, 0x0a,
	0x10, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x77, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x22, 0x38, 0x0a, 0x10, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x4e, 0x65,
	0x77, 0x43, 0x65, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xaa,
	0x02, 0x0a, 0x11, 0x46, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x42, 0x0a, 0x12, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x12, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x58, 0x74, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x58, 0x74, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x39, 0x0a, 0x11, 0x46,
	0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x9e, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x73, 0x22, 0x37, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x77, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x63, 0x65, 0x72, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x65,
	0x72, 0x74, 0x52, 0x05, 0x63, 0x65, 0x72, 0x74, 0x73, 0x22, 0x60, 0x0a, 0x0d, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x0d, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x65, 0x0a, 0x0a, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x0a, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x73,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x74,
	0x44, 0x65, 0x76, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x67, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x76, 0x67,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x6f, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x4d, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6e,
	0x6f, 0x64, 0x65, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x63, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x29, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x22, 0x32, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb8, 0x01, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3c, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x73, 0x70, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x1a, 0x48, 0x0a,
	0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0xf7, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x56, 0x4c, 0x45, 0x53, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x56,
	0x4d, 0x45, 0x53, 0x53, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0b, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x72, 0x6f, 0x6a,
	0x61, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x43, 0x50, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x14, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x53,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x15, 0x12, 0x13, 0x0a,
	0x0f, 0x51, 0x75, 0x69, 0x63, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x16, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x6b, 0x63, 0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x17, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x72, 0x70, 0x63, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10, 0x18, 0x12, 0x13, 0x0a, 0x0f,
	0x48, 0x74, 0x74, 0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x10,
	0x19, 0x32, 0xf7, 0x0c, 0x0a, 0x0d, 0x45, 0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x0a, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x31, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x12, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x64, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x61, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x4f, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x6f, 0x70, 0x79, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x70, 0x79, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x08, 0x43, 0x6f, 0x70, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x67, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x67, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x64, 0x61,
	0x70, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x70, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65,
	0x4f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64,
	0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x08, 0x41,
	0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x0e, 0x46, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x61, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d, 0x4f, 0x62, 0x74,
	0x61, 0x69, 0x6e, 0x4e, 0x65, 0x77, 0x43, 0x65, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x4e, 0x65, 0x77, 0x43, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x74, 0x61,
	0x69, 0x6e, 0x4e, 0x65, 0x77, 0x43, 0x65, 0x72, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x73, 0x70, 0x22, 0x00, 0x32, 0x83, 0x01, 0x0a, 0x0f,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12,
	0x3a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x32, 0x8d, 0x01, 0x0a, 0x10, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42,
	0x65, 0x61, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x75, 0x72, 0x65, 0x69, 0x6e, 0x79, 0x2f, 0x76, 0x32, 0x72, 0x61, 0x79, 0x6d, 0x67, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_server_proto_rawDescOnce sync.Once
	file_rpc_server_proto_rawDescData = file_rpc_server_proto_rawDesc
)

func file_rpc_server_proto_rawDescGZIP() []byte {
	file_rpc_server_proto_rawDescOnce.Do(func() {
		file_rpc_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_server_proto_rawDescData)
	})
	return file_rpc_server_proto_rawDescData
}

var file_rpc_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rpc_server_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_rpc_server_proto_goTypes = []interface{}{
	(BuilderType)(0),             // 0: proto.BuilderType
	(*User)(nil),                 // 1: proto.User
	(*NodeAuthInfo)(nil),         // 2: proto.NodeAuthInfo
	(*GetUsersReq)(nil),          // 3: proto.GetUsersReq
	(*GetUsersRsp)(nil),          // 4: proto.GetUsersRsp
	(*UserOpReq)(nil),            // 5: proto.UserOpReq
	(*UserOpRsp)(nil),            // 6: proto.UserOpRsp
	(*GetSubReq)(nil),            // 7: proto.GetSubReq
	(*GetSubRsp)(nil),            // 8: proto.GetSubRsp
	(*HeartBeatReq)(nil),         // 9: proto.HeartBeatReq
	(*Node)(nil),                 // 10: proto.Node
	(*HeartBeatRsp)(nil),         // 11: proto.HeartBeatRsp
	(*Nodes)(nil),                // 12: proto.Nodes
	(*RegisterNodeReq)(nil),      // 13: proto.RegisterNodeReq
	(*RegisterNodeRsp)(nil),      // 14: proto.RegisterNodeRsp
	(*GetBandwidthStatsReq)(nil), // 15: proto.GetBandwidthStatsReq
	(*Stats)(nil),                // 16: proto.Stats
	(*GetBandwidthStatsRsp)(nil), // 17: proto.GetBandwidthStatsRsp
	(*InboundOpReq)(nil),         // 18: proto.InboundOpReq
	(*InboundOpRsp)(nil),         // 19: proto.InboundOpRsp
	(*TransferInboundReq)(nil),   // 20: proto.TransferInboundReq
	(*CopyInboundReq)(nil),       // 21: proto.CopyInboundReq
	(*CopyUserReq)(nil),          // 22: proto.CopyUserReq
	(*GetInboundReq)(nil),        // 23: proto.GetInboundReq
	(*GetInboundRsp)(nil),        // 24: proto.GetInboundRsp
	(*GetTagReq)(nil),            // 25: proto.GetTagReq
	(*GetTagRsp)(nil),            // 26: proto.GetTagRsp
	(*UpdateProxyReq)(nil),       // 27: proto.UpdateProxyReq
	(*UpdateProxyRsp)(nil),       // 28: proto.UpdateProxyRsp
	(*AdaptiveOpReq)(nil),        // 29: proto.AdaptiveOpReq
	(*AdaptiveReq)(nil),          // 30: proto.AdaptiveReq
	(*AdaptiveRsp)(nil),          // 31: proto.AdaptiveRsp
	(*SetGatewayModelReq)(nil),   // 32: proto.SetGatewayModelReq
	(*SetGatewayModelRsp)(nil),   // 33: proto.SetGatewayModelRsp
	(*ObtainNewCertReq)(nil),     // 34: proto.ObtainNewCertReq
	(*ObtainNewCertRsp)(nil),     // 35: proto.ObtainNewCertRsp
	(*FastAddInboundReq)(nil),    // 36: proto.FastAddInboundReq
	(*FastAddInboundRsp)(nil),    // 37: proto.FastAddInboundRsp
	(*TransferCertReq)(nil),      // 38: proto.TransferCertReq
	(*TransferCertRsp)(nil),      // 39: proto.TransferCertRsp
	(*Cert)(nil),                 // 40: proto.Cert
	(*GetCertsReq)(nil),          // 41: proto.GetCertsReq
	(*GetCertsRsp)(nil),          // 42: proto.GetCertsRsp
	(*ClearUsersReq)(nil),        // 43: proto.ClearUsersReq
	(*ClearUsersRsp)(nil),        // 44: proto.ClearUsersRsp
	(*PingMetric)(nil),           // 45: proto.PingMetric
	(*PingResult)(nil),           // 46: proto.PingResult
	(*GetPingMetricReq)(nil),     // 47: proto.GetPingMetricReq
	(*GetPingMetricRsp)(nil),     // 48: proto.GetPingMetricRsp
	(*GetClutersReq)(nil),        // 49: proto.GetClutersReq
	(*GetClutersRsp)(nil),        // 50: proto.GetClutersRsp
	(*GetNodesReq)(nil),          // 51: proto.GetNodesReq
	(*GetNodesRsp)(nil),          // 52: proto.GetNodesRsp
	nil,                          // 53: proto.HeartBeatRsp.NodesMapEntry
	nil,                          // 54: proto.Nodes.NodesEntry
	nil,                          // 55: proto.GetNodesRsp.NodesMapEntry
}
var file_rpc_server_proto_depIdxs = []int32{
	10, // 0: proto.NodeAuthInfo.node:type_name -> proto.Node
	2,  // 1: proto.GetUsersReq.node_auth_info:type_name -> proto.NodeAuthInfo
	1,  // 2: proto.GetUsersRsp.users:type_name -> proto.User
	2,  // 3: proto.UserOpReq.node_auth_info:type_name -> proto.NodeAuthInfo
	1,  // 4: proto.UserOpReq.users:type_name -> proto.User
	2,  // 5: proto.GetSubReq.node_auth_info:type_name -> proto.NodeAuthInfo
	1,  // 6: proto.GetSubReq.user:type_name -> proto.User
	2,  // 7: proto.HeartBeatReq.node_auth_info:type_name -> proto.NodeAuthInfo
	53, // 8: proto.HeartBeatRsp.nodesMap:type_name -> proto.HeartBeatRsp.NodesMapEntry
	54, // 9: proto.Nodes.nodes:type_name -> proto.Nodes.NodesEntry
	2,  // 10: proto.RegisterNodeReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 11: proto.GetBandwidthStatsReq.node_auth_info:type_name -> proto.NodeAuthInfo
	16, // 12: proto.GetBandwidthStatsRsp.stats:type_name -> proto.Stats
	2,  // 13: proto.InboundOpReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 14: proto.TransferInboundReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 15: proto.CopyInboundReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 16: proto.CopyUserReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 17: proto.GetInboundReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 18: proto.GetTagReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 19: proto.UpdateProxyReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 20: proto.AdaptiveOpReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 21: proto.AdaptiveReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 22: proto.SetGatewayModelReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 23: proto.ObtainNewCertReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 24: proto.FastAddInboundReq.node_auth_info:type_name -> proto.NodeAuthInfo
	0,  // 25: proto.FastAddInboundReq.inboundBuilderType:type_name -> proto.BuilderType
	0,  // 26: proto.FastAddInboundReq.streamBuilderType:type_name -> proto.BuilderType
	2,  // 27: proto.TransferCertReq.node_auth_info:type_name -> proto.NodeAuthInfo
	2,  // 28: proto.GetCertsReq.node_auth_info:type_name -> proto.NodeAuthInfo
	40, // 29: proto.GetCertsRsp.certs:type_name -> proto.Cert
	2,  // 30: proto.ClearUsersReq.node_auth_info:type_name -> proto.NodeAuthInfo
	46, // 31: proto.PingMetric.results:type_name -> proto.PingResult
	2,  // 32: proto.GetPingMetricReq.node_auth_info:type_name -> proto.NodeAuthInfo
	45, // 33: proto.GetPingMetricRsp.metric:type_name -> proto.PingMetric
	55, // 34: proto.GetNodesRsp.nodesMap:type_name -> proto.GetNodesRsp.NodesMapEntry
	10, // 35: proto.HeartBeatRsp.NodesMapEntry.value:type_name -> proto.Node
	12, // 36: proto.Nodes.NodesEntry.value:type_name -> proto.Nodes
	10, // 37: proto.GetNodesRsp.NodesMapEntry.value:type_name -> proto.Node
	3,  // 38: proto.EndNodeAccess.GetUsers:input_type -> proto.GetUsersReq
	5,  // 39: proto.EndNodeAccess.AddUsers:input_type -> proto.UserOpReq
	5,  // 40: proto.EndNodeAccess.DeleteUsers:input_type -> proto.UserOpReq
	43, // 41: proto.EndNodeAccess.ClearUsers:input_type -> proto.ClearUsersReq
	5,  // 42: proto.EndNodeAccess.UpdateUsers:input_type -> proto.UserOpReq
	5,  // 43: proto.EndNodeAccess.ResetUser:input_type -> proto.UserOpReq
	7,  // 44: proto.EndNodeAccess.GetSub:input_type -> proto.GetSubReq
	15, // 45: proto.EndNodeAccess.GetBandWidthStats:input_type -> proto.GetBandwidthStatsReq
	9,  // 46: proto.EndNodeAccess.HeartBeat:input_type -> proto.HeartBeatReq
	13, // 47: proto.EndNodeAccess.RegisterNode:input_type -> proto.RegisterNodeReq
	32, // 48: proto.EndNodeAccess.SetGatewayModel:input_type -> proto.SetGatewayModelReq
	18, // 49: proto.EndNodeAccess.AddInbound:input_type -> proto.InboundOpReq
	18, // 50: proto.EndNodeAccess.DeleteInbound:input_type -> proto.InboundOpReq
	20, // 51: proto.EndNodeAccess.TransferInbound:input_type -> proto.TransferInboundReq
	21, // 52: proto.EndNodeAccess.CopyInbound:input_type -> proto.CopyInboundReq
	22, // 53: proto.EndNodeAccess.CopyUser:input_type -> proto.CopyUserReq
	23, // 54: proto.EndNodeAccess.GetInbound:input_type -> proto.GetInboundReq
	25, // 55: proto.EndNodeAccess.GetTag:input_type -> proto.GetTagReq
	27, // 56: proto.EndNodeAccess.UpdateProxy:input_type -> proto.UpdateProxyReq
	29, // 57: proto.EndNodeAccess.AddAdaptiveConfig:input_type -> proto.AdaptiveOpReq
	29, // 58: proto.EndNodeAccess.DeleteAdaptiveConfig:input_type -> proto.AdaptiveOpReq
	30, // 59: proto.EndNodeAccess.Adaptive:input_type -> proto.AdaptiveReq
	36, // 60: proto.EndNodeAccess.FastAddInbound:input_type -> proto.FastAddInboundReq
	34, // 61: proto.EndNodeAccess.ObtainNewCert:input_type -> proto.ObtainNewCertReq
	38, // 62: proto.EndNodeAccess.TransferCert:input_type -> proto.TransferCertReq
	41, // 63: proto.EndNodeAccess.GetCerts:input_type -> proto.GetCertsReq
	47, // 64: proto.EndNodeAccess.GetPingMetric:input_type -> proto.GetPingMetricReq
	49, // 65: proto.CenterNodeAdmin.GetCluters:input_type -> proto.GetClutersReq
	51, // 66: proto.CenterNodeAdmin.GetNodes:input_type -> proto.GetNodesReq
	9,  // 67: proto.CenterNodeAccess.HeartBeat:input_type -> proto.HeartBeatReq
	13, // 68: proto.CenterNodeAccess.RegisterNode:input_type -> proto.RegisterNodeReq
	4,  // 69: proto.EndNodeAccess.GetUsers:output_type -> proto.GetUsersRsp
	6,  // 70: proto.EndNodeAccess.AddUsers:output_type -> proto.UserOpRsp
	6,  // 71: proto.EndNodeAccess.DeleteUsers:output_type -> proto.UserOpRsp
	44, // 72: proto.EndNodeAccess.ClearUsers:output_type -> proto.ClearUsersRsp
	6,  // 73: proto.EndNodeAccess.UpdateUsers:output_type -> proto.UserOpRsp
	6,  // 74: proto.EndNodeAccess.ResetUser:output_type -> proto.UserOpRsp
	8,  // 75: proto.EndNodeAccess.GetSub:output_type -> proto.GetSubRsp
	17, // 76: proto.EndNodeAccess.GetBandWidthStats:output_type -> proto.GetBandwidthStatsRsp
	11, // 77: proto.EndNodeAccess.HeartBeat:output_type -> proto.HeartBeatRsp
	14, // 78: proto.EndNodeAccess.RegisterNode:output_type -> proto.RegisterNodeRsp
	33, // 79: proto.EndNodeAccess.SetGatewayModel:output_type -> proto.SetGatewayModelRsp
	19, // 80: proto.EndNodeAccess.AddInbound:output_type -> proto.InboundOpRsp
	19, // 81: proto.EndNodeAccess.DeleteInbound:output_type -> proto.InboundOpRsp
	19, // 82: proto.EndNodeAccess.TransferInbound:output_type -> proto.InboundOpRsp
	19, // 83: proto.EndNodeAccess.CopyInbound:output_type -> proto.InboundOpRsp
	19, // 84: proto.EndNodeAccess.CopyUser:output_type -> proto.InboundOpRsp
	24, // 85: proto.EndNodeAccess.GetInbound:output_type -> proto.GetInboundRsp
	26, // 86: proto.EndNodeAccess.GetTag:output_type -> proto.GetTagRsp
	28, // 87: proto.EndNodeAccess.UpdateProxy:output_type -> proto.UpdateProxyRsp
	31, // 88: proto.EndNodeAccess.AddAdaptiveConfig:output_type -> proto.AdaptiveRsp
	31, // 89: proto.EndNodeAccess.DeleteAdaptiveConfig:output_type -> proto.AdaptiveRsp
	31, // 90: proto.EndNodeAccess.Adaptive:output_type -> proto.AdaptiveRsp
	37, // 91: proto.EndNodeAccess.FastAddInbound:output_type -> proto.FastAddInboundRsp
	35, // 92: proto.EndNodeAccess.ObtainNewCert:output_type -> proto.ObtainNewCertRsp
	39, // 93: proto.EndNodeAccess.TransferCert:output_type -> proto.TransferCertRsp
	42, // 94: proto.EndNodeAccess.GetCerts:output_type -> proto.GetCertsRsp
	48, // 95: proto.EndNodeAccess.GetPingMetric:output_type -> proto.GetPingMetricRsp
	50, // 96: proto.CenterNodeAdmin.GetCluters:output_type -> proto.GetClutersRsp
	52, // 97: proto.CenterNodeAdmin.GetNodes:output_type -> proto.GetNodesRsp
	11, // 98: proto.CenterNodeAccess.HeartBeat:output_type -> proto.HeartBeatRsp
	14, // 99: proto.CenterNodeAccess.RegisterNode:output_type -> proto.RegisterNodeRsp
	69, // [69:100] is the sub-list for method output_type
	38, // [38:69] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_rpc_server_proto_init() }
func file_rpc_server_proto_init() {
	if File_rpc_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeAuthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOpRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNodeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBandwidthStatsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBandwidthStatsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundOpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InboundOpRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferInboundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyInboundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInboundRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProxyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProxyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdaptiveOpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdaptiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdaptiveRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGatewayModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGatewayModelRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObtainNewCertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObtainNewCertRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FastAddInboundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FastAddInboundRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCertRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearUsersRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPingMetricReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPingMetricRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClutersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClutersRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_server_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_server_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_rpc_server_proto_goTypes,
		DependencyIndexes: file_rpc_server_proto_depIdxs,
		EnumInfos:         file_rpc_server_proto_enumTypes,
		MessageInfos:      file_rpc_server_proto_msgTypes,
	}.Build()
	File_rpc_server_proto = out.File
	file_rpc_server_proto_rawDesc = nil
	file_rpc_server_proto_goTypes = nil
	file_rpc_server_proto_depIdxs = nil
}
